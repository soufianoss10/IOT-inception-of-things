# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|

  config.vm.define "sbenzarS" do |s|
      s.vm.provider "virtualbox" do |vb|
          vb.name = "sbenzarS"
          vb.memory = 1024
          vb.cpus = 1
      end
  s.vm.box = "centos/7"
  s.vm.hostname = "sbenzarS"
  s.vm.network :private_network, ip: "192.168.56.110"
  s.vm.provision "shell", inline: <<-SHELL
  curl -sfL https://get.k3s.io | sh -
  curl -sfL https://get.k3s.io | sh -s - --no-deploy traefik --write-kubeconfig-mode 644 --node-name sbenzarS --flannel-iface=eth1
  sudo cat /var/lib/rancher/k3s/server/node-token > /home/vagrant/token
  SHELL
  end
#   config.trigger.after :up do |trigger|
#       trigger.run = {inline: "vagrant scp sbenzarS:/home/vagrant/token ."}        #      vagrant plugin install vagrant-scp
#   end
  
  config.vm.define "sbenzarSW" do |sw|
      sw.vm.provider "virtualbox" do |vb|
          vb.memory = 1024
          vb.cpus = 1
          vb.name = "sbenzarSW"
      end
      sw.vm.box = "centos/7"
      sw.vm.hostname = "sbenzarSW"
      sw.vm.network :private_network, ip: "192.168.56.111"
      sw.vm.provision "shell", inline: <<-SHELL
      curl -sfL https://get.k3s.io | K3S_NODE_NAME=sbenzarSW K3S_URL=https://192.168.56.110:6443 K3S_TOKEN_FILE=/vagrant/token sh -s - --flannel-iface=eth1
      SHELL
  end

end
# # -*- mode: ruby -*-
# # vi: set ft=ruby :

# Vagrant.configure("2") do |config|

#   config.vm.define "sbenzarS" do |sbenzarS|
#     sbenzarS.vm.box = "centos/7"
#     sbenzarS.vm.hostname = "sbenzarS"
#     sbenzarS.vm.network :private_network, ip: "192.168.56.110"
#     sbenzarS.vm.provider :virtualbox do |vb|
#       vb.name = "sbenzarS"
#       vb.memory = "512"
#       vb.cpus = 1

#     end
#   sbenzarS.vm.provision "shell" do |sben|
#   sben.path = "scripts_config/server_setup.sh"
#     end
    
#     # sbenzarS.trigger.after :up do |trigger|
#     #  trigger.run = {inline: "cat /home/vagrant/token"}
#     # end
    
#     # Get the node token from the server
#     #  k3s_token=$(vagrant ssh sbenzarS sudo cat /var/lib/rancher/k3s/server/token)
#     #  sudo cat /var/lib/rancher/k3s/server/token > /home/vagrant/token
#     #  get the node token from the server
#     # NODE_TOKEN=$(sudo cat /var/lib/rancher/k3s/server/token)
    
#   end

#   config.vm.define "sbenzarSW" do |sbenzarSW|
#     sbenzarSW.vm.box = "centos/7"
#     sbenzarSW.vm.hostname = "sbenzarSW"
#     sbenzarSW.vm.network :private_network, ip: "192.168.56.111"
#     sbenzarSW.vm.provider :virtualbox do |vb|
#       vb.name = "sbenzarSW"
#       vb.memory = "512"
#       vb.cpus = 1
#     end
#     sbenzarSW.vm.provision "shell" do |sbenz|
#       sbenz.path = "scripts_config/sworker_setup.sh"
#     # curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" sh
#     end

#   end
# end
# # #!/bin/bash

# # # Get the node token from the server
# # token=$(ssh <k3s-server-ip> sudo cat /var/lib/rancher/k3s/server/node-token)

# # # Join the worker to the server
# # curl -sfL https://get.k3s.io | K3S_URL=https://<k3s-server-ip>:6443 K3S_TOKEN=$token sh -

# # # Wait for the worker node to be ready
# # while [[ $(ssh <k3s-server-ip> sudo kubectl get node | grep $(hostname) | awk '{print $2}') != "Ready" ]]; do sleep 1; done

# # # Done
# # echo "Worker joined k3s server successfully."
# # -*- mode: ruby -*-
# # vi: set ft=ruby :

# # Vagrant.configure("2") do |config|

# #   # Define the Server machine
# #   config.vm.define "sbenzarS" do |sbenzarS|
# #     sbenzarS.vm.box = "centos/7"
# #     sbenzarS.vm.hostname = "sbenzarS"
# #     sbenzarS.vm.network "private_network", ip: "192.168.56.110"
# #     sbenzarS.vm.provider "virtualbox" do |v|
# #       v.memory = 512
# #       v.cpus = 1
# #     end
# #   end

# #   # Define the ServerWorker machine
# #   config.vm.define "sbenzarSW" do |sbenzarSW|
# #     sbenzarSW.vm.box = "centos/7"
# #     sbenzarSW.vm.hostname = "sbenzarSW"
# #     sbenzarSW.vm.network "private_network", ip: "192.168.56.111"
# #     sbenzarSW.vm.provider "virtualbox" do |v|
# #       v.memory = 512
# #       v.cpus = 1
# #     end
# #   end

# #   # Set up SSH authentication
# #   config.ssh.insert_key = false

# #   # Provision both machines with K3s and kubectl
# #   config.vm.provision "shell", inline: <<-SHELL
# #     # Install K3s on Server machine in controller mode
# #     curl -sfL https://get.k3s.io | sh -s - server
# #     sudo chmod 644 /etc/rancher/k3s/k3s.yaml
# #     export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
# #     echo 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml' >> ~/.bashrc

# #     # Install K3s on ServerWorker machine in agent mode
# #     curl -sfL https://get.k3s.io | K3S_URL=https://192.168.56.110:6443 K3S_TOKEN=$(cat /var/lib/rancher/k3s/server/node-token) sh -s - agent
# #     sudo chmod 644 /etc/rancher/k3s/k3s.yaml
# #     export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
# #     echo 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml' >> ~/.bashrc

# #     # Install kubectl
# #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
# #     chmod +x kubectl
# #     sudo mv kubectl /usr/local/bin/
# #   SHELL

# # end