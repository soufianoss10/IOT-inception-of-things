# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "centos/8"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../data", "/vagrant_data"

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y apache2
  SHELL
end
=====


Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"

  config.vm.define "sbenzarS" do |server|
      server.vm.hostname = "sbenzarS"
      server.vm.network "private_network", ip: "192.168.42.110"
      server.vm.provider "virtualbox" do |v|
          v.name = "sbenzarS"
          v.memory = 1024
          v.cpus = 1
      end
      server.vm.provision "shell", inline: <<-SHELL
      curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="--flannel-iface eth1" sh -s -
      echo $(sudo cat /var/lib/rancher/k3s/server/node-token) > /vagrant/.token
      SHELL
      server.trigger.after :up do |trigger|
          trigger.run = {inline: "vagrant scp sbenzar:/vagrant/.token ."}
      end
  end

  config.vm.define "sbenzarSW" do |worker|
      worker.vm.hostname = "sbenzarSW"
      worker.vm.network "private_network", ip: "192.168.42.111"
      worker.vm.provider "virtualbox" do |v|
          v.name = "sbenzarSW"
          v.memory = 1024
          v.cpus = 1
      end
      worker.vm.provision "shell", inline: <<-SHELL
      curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" K3S_URL=https://192.168.42.110:6443 K3S_TOKEN=$(cat /vagrant/.token) INSTALL_K3S_EXEC="--flannel-iface eth1" sh -s -
      SHELL
      worker.trigger.after :up do |trigger|
          trigger.run = {inline: "rm .token"}
      end
  end
  
end
